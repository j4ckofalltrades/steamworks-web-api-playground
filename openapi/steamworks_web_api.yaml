openapi: 3.0.3
info:
  title: Steamworks Web API
  description: '[Steamworks Web API Reference](https://partner.steamgames.com/doc/webapi)'
  version: 1.0.0
  contact: {}
servers:
  - url: https://api.steampowered.com
paths:
  /IEconService/GetTradeHistory/v1/:
    get:
      tags:
        - IEconService Interface
      summary: GetTradeHistory
      description: Gets a history of trades
      operationId: gettradehistory
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: max_trades
          in: query
          schema:
            type: string
          description: The number of trades to return information for
        - name: start_after_time
          in: query
          schema:
            type: string
          description: >-
            The time of the last trade shown on the previous page of results, or
            the time of the first trade if navigating back
        - name: start_after_tradeid
          in: query
          schema:
            type: string
          description: >-
            The tradeid shown on the previous page of results, or the ID of the
            first trade if navigating back
        - name: navigating_back
          in: query
          schema:
            type: string
          description: >-
            The user wants the previous page of results, so return the previous
            max_trades trades before the start time and ID
        - name: get_descriptions
          in: query
          schema:
            type: string
          description: >-
            If set, the item display data for the items included in the returned
            trades will also be returned
        - name: language
          in: query
          schema:
            type: string
          description: The language to use when loading item display data
        - name: include_failed
          in: query
          schema:
            type: string
        - name: include_total
          in: query
          schema:
            type: string
          description: >-
            If set, the total number of trades the account has participated in
            will be included in the response
      responses:
        '200':
          description: ''
  /IEconService/GetTradeOffers/v1:
    get:
      tags:
        - IEconService Interface
      summary: GetTradeOffers
      description: Get a list of sent or received trade offers
      operationId: gettradeoffers
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: get_sent_offers
          in: query
          schema:
            type: string
          description: Request the list of sent offers.
        - name: get_received_offers
          in: query
          schema:
            type: string
          description: Request the list of received offers.
        - name: get_descriptions
          in: query
          schema:
            type: string
          description: >-
            If set, the item display data for the items included in the returned
            trade offers will also be returned.
        - name: language
          in: query
          schema:
            type: string
          description: The language to use when loading item display data.
        - name: active_only
          in: query
          schema:
            type: string
          description: >-
            Indicates we should only return offers which are still active, or
            offers that have changed in state since the time_historical_cutoff
        - name: historical_only
          in: query
          schema:
            type: string
          description: Indicates we should only return offers which are not active.
        - name: time_historical_cutoff
          in: query
          schema:
            type: string
          description: >-
            When active_only is set, offers updated since this time will also be
            returned
      responses:
        '200':
          description: ''
  /IEconService/GetTradeOffer/v1/:
    get:
      tags:
        - IEconService Interface
      summary: GetTradeOffer
      description: Gets a specific trade offer
      operationId: gettradeoffer
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: tradeofferid
          in: query
          schema:
            type: string
        - name: language
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
  /IEconService/GetTradeOffersSummary/v1/:
    get:
      tags:
        - IEconService Interface
      summary: GetTradeOffersSummary
      description: Get counts of pending and new trade offers
      operationId: gettradeofferssummary
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: time_last_visit
          in: query
          schema:
            type: string
          description: >-
            The time the user last visited. If not passed, will use the time the
            user last visited the trade offer page.
      responses:
        '200':
          description: ''
  /IGameServersService/GetAccountList/v1/:
    get:
      tags:
        - IGameServersService Interface
      summary: GetAccountList
      description: Gets a list of game server accounts with their logon tokens
      operationId: getaccountlist
      parameters:
        - name: key
          in: query
          schema:
            type: string
            example: ''
          description: Steamworks Web API user authentication key.
      responses:
        '200':
          description: ''
  /IGameServersService/CreateAccount/v1/:
    post:
      tags:
        - IGameServersService Interface
      summary: CreateAccount
      description: Creates a persistent game server account
      operationId: createaccount
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: appid
          in: query
          schema:
            type: string
          description: The app to use the account for
        - name: memo
          in: query
          schema:
            type: string
          description: The memo to set on the new account
      responses:
        '200':
          description: ''
  /IGameServersService/SetMemo/v1/:
    post:
      tags:
        - IGameServersService Interface
      summary: SetMemo
      description: This method changes the memo associated with the game server account. Memos do not affect the account in any way. The memo shows up in the GetAccountList response and serves only as a reminder of what the account is used for.
      operationId: setmemo
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamid
          in: query
          schema:
            type: string
          description: The SteamID of the game server to set the memo on
        - name: memo
          in: query
          schema:
            type: string
          description: The memo to set on the new account
      responses:
        '200':
          description: ''
  /IGameServersService/ResetLoginToken/v1/:
    post:
      tags:
        - IGameServersService Interface
      summary: ResetLoginToken
      description: Generates a new login token for the specified game server
      operationId: resetlogintoken
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamid
          in: query
          schema:
            type: string
          description: The SteamID of the game server to reset the login token of
      responses:
        '200':
          description: ''
  /IGameServersService/DeleteAccount/v1/:
    post:
      tags:
        - IGameServersService Interface
      summary: DeleteAccount
      description: Deletes a persistent game server account
      operationId: deleteaccount
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamid
          in: query
          schema:
            type: string
          description: The SteamID of the game server account to delete
      responses:
        '200':
          description: ''
  /IGameServersService/GetAccountPublicInfo/v1/:
    get:
      tags:
        - IGameServersService Interface
      summary: GetAccountPublicInfo
      description: Gets public information about a given game server account
      operationId: getaccountpublicinfo
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamid
          in: query
          schema:
            type: string
          description: The SteamID of the game server to get info on
      responses:
        '200':
          description: ''
  /IGameServersService/QueryLoginToken/v1/:
    get:
      tags:
        - IGameServersService Interface
      summary: QueryLoginToken
      description: Queries the status of the specified token, which must be owned by you
      operationId: querylogintoken
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: login_token
          in: query
          schema:
            type: string
          description: Login token to query
      responses:
        '200':
          description: ''
  /IGameServersService/GetServerSteamIDsByIP/v1/:
    get:
      tags:
        - IGameServersService Interface
      summary: GetServerSteamIDsByIP
      description: Gets a list of server SteamIDs given a list of IPs
      operationId: getserversteamidsbyip
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: server_ips
          in: query
          schema:
            type: string
          description: (optional)
      responses:
        '200':
          description: ''
  /IGameServersService/GetServerIPsBySteamID/v1/:
    get:
      tags:
        - IGameServersService Interface
      summary: GetServerIPsBySteamID
      description: Gets a list of server IP addresses given a list of SteamIDs
      operationId: getserveripsbysteamid
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: server_steamids
          in: query
          schema:
            type: string
          description: (optional)
      responses:
        '200':
          description: ''
  /IPlayerService/GetRecentlyPlayedGames/v1/:
    get:
      tags:
        - IPlayerService Interface
      summary: GetRecentlyPlayedGames
      description: Gets information about a player's recently played games
      operationId: getrecentlyplayedgames
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamid
          in: query
          schema:
            type: string
          description: The player we're asking about
        - name: count
          in: query
          schema:
            type: string
          description: 'The number of games to return (0/unset: all)'
      responses:
        '200':
          description: ''
  /IPlayerService/GetOwnedGames/v1/:
    get:
      tags:
        - IPlayerService Interface
      summary: GetOwnedGames
      description: Return a list of games owned by the player
      operationId: getownedgames
      parameters:
        - name: key
          in: query
          schema:
            type: string
            example: ''
          description: Steamworks Web API user authentication key.
        - name: steamid
          in: query
          schema:
            type: string
            example: ''
          description: The player we're asking about
        - name: include_appinfo
          in: query
          schema:
            type: string
            example: ''
          description: true if we want additional details (name, icon) about each game
        - name: include_played_free_games
          in: query
          schema:
            type: string
            example: ''
          description: >-
            Free games are excluded by default. If this is set, free games the
            user has played will be returned.
        - name: appids_filter
          in: query
          schema:
            type: string
            example: ''
          description: if set, restricts result set to the passed in apps
      responses:
        '200':
          description: ''
  /IPlayerService/GetSteamLevel/v1/:
    get:
      tags:
        - IPlayerService Interface
      summary: GetSteamLevel
      description: Returns the Steam Level of a user
      operationId: getsteamlevel
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamid
          in: query
          schema:
            type: string
          description: The player we're asking about
      responses:
        '200':
          description: ''
  /IPlayerService/GetBadges/v1/:
    get:
      tags:
        - IPlayerService Interface
      summary: GetBadges
      description: Gets badges that are owned by a specific user
      operationId: getbadges
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamid
          in: query
          schema:
            type: string
          description: The player we're asking about
      responses:
        '200':
          description: ''
  /IPlayerService/GetCommunityBadgeProgress/v1/:
    get:
      tags:
        - IPlayerService Interface
      summary: GetCommunityBadgeProgress
      description: Gets all the quests needed to get the specified badge, and which are completed
      operationId: getcommunitybadgeprogress
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamid
          in: query
          schema:
            type: string
          description: The player we're asking about
        - name: badgeid
          in: query
          schema:
            type: string
          description: The badge we're asking about
      responses:
        '200':
          description: ''
  /ISteamApps/GetAppList/v2/:
    get:
      tags:
        - ISteamApps Interface
      summary: GetAppList
      description: Gets the complete list of public apps.
      operationId: getapplist
      responses:
        '200':
          description: ''
  /ISteamApps/UpToDateCheck/v1/:
    get:
      tags:
        - ISteamApps Interface
      summary: UpToDateCheck
      description: UpToDateCheck
      operationId: uptodatecheck
      parameters:
        - name: appid
          in: query
          schema:
            type: string
          description: AppID of game
        - name: version
          in: query
          schema:
            type: string
          description: The installed version of the game
      responses:
        '200':
          description: ''
  /ISteamNews/GetNewsForApp/v2/:
    get:
      tags:
        - ISteamNews Interface
      summary: GetNewsForApp
      description: Get the news for the specified app.
      operationId: getnewsforapp
      parameters:
        - name: appid
          in: query
          schema:
            type: string
          description: AppId to retrieve news for
        - name: maxlength
          in: query
          schema:
            type: string
          description: >-
            (optional) Maximum length for the content to return, if this is 0
            the full content is returned, if it's less then a blurb is generated
            to fit.
        - name: enddate
          in: query
          schema:
            type: string
          description: >-
            (optional) Retrieve posts earlier than this date (unix epoch
            timestamp)
        - name: count
          in: query
          schema:
            type: string
          description: '(optional) # of posts to retrieve (default 20)'
        - name: feeds
          in: query
          schema:
            type: string
          description: (optional) Comma-seperated list of feed names to return news for
      responses:
        '200':
          description: ''
  /ISteamUser/GetFriendList/v1/:
    get:
      tags:
        - ISteamUser Interface
      summary: GetFriendList
      description: GetFriendList
      operationId: getfriendlist
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key
        - name: steamid
          in: query
          schema:
            type: string
          description: SteamID of user
        - name: relationship
          in: query
          schema:
            type: string
          description: '(optional) relationship type (ex: friend)'
      responses:
        '200':
          description: ''
  /ISteamUser/GetPlayerBans/v1/:
    get:
      tags:
        - ISteamUser Interface
      summary: GetPlayerBans
      description: GetPlayerBans
      operationId: getplayerbans
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamids
          in: query
          schema:
            type: string
          description: Comma-delimited list of SteamIDs
      responses:
        '200':
          description: ''
  /ISteamUser/GetPlayerSummaries/v2/:
    get:
      tags:
        - ISteamUser Interface
      summary: GetPlayerSummaries
      description: GetPlayerSummaries
      operationId: getplayersummaries
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamids
          in: query
          schema:
            type: string
          description: Comma-delimited list of SteamIDs
      responses:
        '200':
          description: ''
  /ISteamUser/GetUserGroupList/v1/:
    get:
      tags:
        - ISteamUser Interface
      summary: GetUserGroupList
      description: GetUserGroupList
      operationId: getusergrouplist
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: 'Steamworks Web API user authentication key. '
        - name: steamid
          in: query
          schema:
            type: string
          description: SteamID of user
      responses:
        '200':
          description: ''
  /ISteamUser/ResolveVanityURL/v1/:
    get:
      tags:
        - ISteamUser Interface
      summary: ResolveVanityURL
      description: ResolveVanityURL
      operationId: resolvevanityurl
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: vanityurl
          in: query
          schema:
            type: string
          description: The vanity URL to get a SteamID for
        - name: url_type
          in: query
          schema:
            type: string
          description: >-
            (optional) The type of vanity URL. 1 (default): Individual profile,
            2: Group, 3: Official game group
      responses:
        '200':
          description: ''
  /ISteamUserStats/GetGlobalAchievementPercentagesForApp/v2/:
    get:
      tags:
        - ISteamUserStats Interface
      summary: GetGlobalAchievementPercentagesForApp
      description: Retrieves the global achievement percentages for the specified app.
      operationId: getglobalachievementpercentagesforapp
      parameters:
        - name: gameid
          in: query
          schema:
            type: string
            example: ''
          description: GameID to retrieve the achievement percentages for
      responses:
        '200':
          description: ''
  /ISteamUserStats/GetGlobalStatsForGame/v1/:
    get:
      tags:
        - ISteamUserStats Interface
      summary: GetGlobalStatsForGame
      description: Retrieves the global stats percentages for the specified app.
      operationId: getglobalstatsforgame
      parameters:
        - name: appid
          in: query
          schema:
            type: string
            example: ''
          description: AppID that we're getting global stats for
        - name: count
          in: query
          schema:
            type: string
            example: ''
          description: Number of stats get data for
        - name: name[0]
          in: query
          schema:
            type: string
            example: ''
          description: Names of stat to get data for
        - name: startdate
          in: query
          schema:
            type: string
          description: (optional)
        - name: enddate
          in: query
          schema:
            type: string
          description: (optional)
      responses:
        '200':
          description: ''
  /ISteamUserStats/GetNumberOfCurrentPlayers/v1/:
    get:
      tags:
        - ISteamUserStats Interface
      summary: GetNumberOfCurrentPlayers
      description: Gets the total number of players currently active in the specified app on Steam.
      operationId: getnumberofcurrentplayers
      parameters:
        - name: appid
          in: query
          schema:
            type: string
            example: '570'
          description: AppID that we're getting user count for
      responses:
        '200':
          description: ''
  /ISteamUserStats/GetPlayerAchievements/v1/:
    get:
      tags:
        - ISteamUserStats Interface
      summary: GetPlayerAchievements
      description: Gets the list of achievements the specified user has unlocked in an app.
      operationId: getplayerachievements
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamid
          in: query
          schema:
            type: string
          description: SteamID of user
        - name: appid
          in: query
          schema:
            type: string
          description: AppID to get achievements for
        - name: l
          in: query
          schema:
            type: string
          description: (optional) Language to return strings for
      responses:
        '200':
          description: ''
  /ISteamUserStats/GetSchemaForGame/v2/:
    get:
      tags:
        - ISteamUserStats Interface
      summary: GetSchemaForGame
      description: Gets the complete list of stats and achievements for the specified game.
      operationId: getschemaforgame
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: appid
          in: query
          schema:
            type: string
          description: appid of game
        - name: l
          in: query
          schema:
            type: string
          description: (optional) localized language to return (english, french, etc.)
      responses:
        '200':
          description: ''
  /ISteamUserStats/GetUserStatsForGame/v2/:
    get:
      tags:
        - ISteamUserStats Interface
      summary: GetUserStatsForGame
      description: Gets the list of stats that the specified user has set in an app.
      operationId: getuserstatsforgame
      parameters:
        - name: key
          in: query
          schema:
            type: string
          description: Steamworks Web API user authentication key.
        - name: steamid
          in: query
          schema:
            type: string
          description: SteamID of user
        - name: appid
          in: query
          schema:
            type: string
          description: appid of game
      responses:
        '200':
          description: ''
  /ISteamWebAPIUtil/GetServerInfo/v1/:
    get:
      tags:
        - ISteamWebAPIUtil Interface
      summary: GetServerInfo
      description: GetServerInfo
      operationId: getserverinfo
      responses:
        '200':
          description: ''
  /ISteamWebAPIUtil/GetSupportedAPIList/v1/:
    get:
      tags:
        - ISteamWebAPIUtil Interface
      summary: GetSupportedAPIList
      description: Gets the list of supported API calls.
      operationId: getsupportedapilist
      parameters:
        - name: key
          in: query
          schema:
            type: string
            example: ''
          description: >-
            The Steamworks Web API authentication key which is required to
            receive restricted methods.
      responses:
        '200':
          description: ''
tags:
  - name: IEconService Interface
    description: Additional Steam Economy methods that provide access to Steam Trading.
  - name: IGameServersService Interface
    description: Methods to improve the administration of Steam Game Servers.
  - name: IPlayerService Interface
    description: Provides additional methods for interacting with Steam Users.
  - name: ISteamApps Interface
    description: Used to access data about applications on Steam.
  - name: ISteamNews Interface
    description: Provides access to the Steam News functionality.
  - name: ISteamUser Interface
    description: Used to access information and interact with users.
  - name: ISteamUserStats Interface
    description: Used to access information about users.
  - name: ISteamWebAPIUtil Interface
    description: >-
      Provides miscellaneous Web API related functionality through utility
      methods.
